---
# Tasks file for grafana
# This config is based on a Docker install

- name: 'Create Docker /opt/grafana subdirectories for Grafana'
  ansible.builtin.file:
    path: /opt/grafana
    state: directory
    mode: '0775'

- name: 'Create Docker /opt/grafana/etc subdirectories for Grafana'
  ansible.builtin.file:
    path: /opt/grafana/etc
    state: directory
    mode: '0775'

- name: 'Create Docker /opt/grafana/data subdirectories for Grafana'
  ansible.builtin.file:
    path: /opt/grafana/data
    state: directory
    mode: '0775'

- name: 'Grafana config file'
  ansible.builtin.template:
    src: 'grafana.ini.j2'
    dest: "/opt/grafana/etc/grafana.ini"
    owner: 'root'
    group: "{{ grafana_stack_admin_group }}"
    mode: '0664'

- name: 'Grafana LDAP config file'
  ansible.builtin.template:
    src: 'ldap.toml.j2'
    dest: "/opt/grafana/etc/ldap.toml"
    owner: 'root'
    group: "{{ grafana_stack_admin_group }}"
    mode: '0664'

- name: 'Grafana Docker Compose file'
  ansible.builtin.template:
    src: 'docker-compose.yml.j2'
    dest: "/opt/grafana/docker-compose.yml"
    owner: 'emanners'
    group: "{{ grafana_stack_admin_group }}"
    mode: '0664'

# Grafana 8.4.6 is the last version compiled for docker image
# https://github.com/grafana/grafana/issues/47676
#- name: 'Docker_Pull Grafana Image'
#  community.docker.docker_image:
#    name: 'grafana/grafana-oss:8.4.6'
#    source: pull
#    pull:
#      platform: 'linux/arm64'

- name: 'Docker create the Grafana Container'
  community.docker.docker_container:
    name: 'grafana'
    #image: 'grafana/grafana-oss:8.4.6'
    image: 'grafana/grafana-enterprise'
    state: started
    #TODO: Setup container healtcheck and switch to 'healthy'
    ports:
      - "3000:3000/tcp"
    volumes:
      - '/opt/grafana/etc:/etc/grafana'
      #- '/opt/grafana/etc:/var/lib/grafana'
    user: '1001'
    restart_policy: 'unless-stopped'
    env:
      TZ: 'America/Chicago'
    #platform: 'linux/arm64/v8'
    platform: 'linux/arm64'

# ansible-galaxy collection install community.grafana
# TODO: Add APIUSER once IDM is up.
- name: 'Configure Grafana to use Prometheus DataSource'
  community.grafana.grafana_datasource:
    name: 'prometheus_base'
    is_default: true
    state: 'present'
    grafana_url: 'http://pi-compute5-a.edsonmanners.com:3000/'
    grafana_api_key: 'glsa_HTtL5eHzfzA7N6gU9P1Lyu8YRlc3kxUt_3695af5b'
    org_id: '1'
    ds_type: 'prometheus'
    ds_url: 'http://pi-compute5-a.edsonmanners.com:9090'
    time_interval: '>10s'

- name: 'Configure Grafana to use Loki DataSource'
  community.grafana.grafana_datasource:
    name: 'loki_base'
    is_default: false
    state: 'present'
    grafana_url: 'http://pi-compute5-a.edsonmanners.com:3000/'
    #grafana_user: 'admin'
    #grafana_password: 'admin'
    grafana_api_key: 'glsa_HTtL5eHzfzA7N6gU9P1Lyu8YRlc3kxUt_3695af5b'
    #org_id: '1'
    ds_type: 'loki'
    ds_url: 'http://pi-compute5-a.edsonmanners.com:3100'

# https://docs.ansible.com/ansible/latest/collections/community/grafana/grafana_dashboard_module.html
# https://grafana.com/grafana/dashboards/1860-node-exporter-full/
- name: Import Grafana dashboard for Node Exporter
  community.grafana.grafana_dashboard:
    grafana_url: 'http://pi-compute5-a.edsonmanners.com:3000/'
    grafana_user: 'admin'
    #grafana_api_key: "{{ grafana_api_key }}"
    state: 'present'
    dashboard_id: 1860
    dashboard_revision: 40