# dhcpd.conf
#
# Attention: If /etc/ltsp/dhcpd.conf exists, that will be used as
# configuration file instead of this file.
#

option domain-name "edsonmanners.com";
option domain-name-servers 192.168.68.100;
#option domain-name-servers 192.168.68.100, ns2.example.org;

#default-lease-time 600;		# 5 minutes
default-lease-time 604800;		# 1 week
#max-lease-time 7200;
max-lease-time 1209600;			# 2 weeks

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
ddns-update-style none;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

omapi-port 7911;
omapi-key omapi_key;

key omapi_key {
  algorithm hmac-md5;
  secret dc21efc48b2dc087dc3ebfa48ec720cc;
}

# DHCP Failover Config
# https://kb.isc.org/docs/aa-00502

# https://stackoverflow.com/questions/40086613/ansible-jinja2-string-comparison
# You **CANNOT** use squiggly braces inside of a Jinja2 expression!!!!!!!!!
{% if 'infra' == foreman['foreman_hostname'] %}
failover peer "failover-partner" {
  primary;
  address infra.edsonmanners.com;
  peer address pi-compute.edsonmanners.com;
  max-response-delay 60;
  max-unacked-updates 10;
  mclt 3600;
  split 128;
  load balance max seconds 3;
}
{% elif 'pi-compute' == foreman['foreman_hostname'] %}
failover peer "failover-partner" {
  secondary;
  address pi-compute.edsonmanners.com;
  peer address infra.edsonmanners.com;
  max-response-delay 60;
  max-unacked-updates 10;
  load balance max seconds 3;
}
{% endif %}

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
#log-facility local7;

subnet 192.168.68.0 netmask 255.255.252.0 {
  option domain-name-servers 192.168.68.100;
  option routers 192.168.68.1;
  pool {
    failover peer "failover-partner";
    range 192.168.70.100 192.168.70.200;
  }
}

# This is a very basic subnet declaration.

# Fixed IP addresses can also be specified for hosts.   These addresses
# should not also be listed as being available for dynamic assignment.
# Hosts for which fixed IP addresses have been specified can boot using
# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
# be booted with DHCP, unless there is an address range on the subnet
# to which a BOOTP client is connected which has the dynamic-bootp flag
# set.

#host infra  { hardware ethernet --:--:--:--:--:--:--; fixed-address 192.168.68.4; }
host katello    { hardware ethernet 08:00:27:6d:ad:7e; fixed-address 192.168.68.6; }
host gamingrig  { hardware ethernet 14:dd:a9:25:84:96; fixed-address 192.168.68.20; }
# -- Pi Compute Space [32-48]
host pi-compute { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.32; }
#host pi-compute4-b { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.33; }
#host pi-compute4-c { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.34; }
#host pi-compute4-d { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.35; }
# -- Pi Compute 5
#host pi-compute5-a { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.40; }
#host pi-compute5-b { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.41; }
#host pi-compute5-c { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.42; }
#host pi-compute5-d { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.43; }
# --
#########host katello    { hardware ethernet 08:00:27:6d:ad:7e; fixed-address 192.168.68.98; }
#########host pi-compute { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.68.99; }
# --
#host pi-keyboard-wifi { hardware ethernet dc:a6:32:ea:d8:46; fixed-address 192.168.68.120; }
host pi-keyboard-400 { hardware ethernet dc:a6:32:ea:d8:45; fixed-address 192.168.68.120; }
host pi-keyboard-500-wired { hardware ethernet 2c:cf:67:bd:44:ef; fixed-address 192.168.70.90; }
host pi-keyboard-500-wifi { hardware ethernet 2c:cf:67:bd:44:f0; fixed-address 192.168.70.92; }
host pi-robot-0 { hardware ethernet b8:27:eb:b0:ba:d9; fixed-address pi-robot-0.edsonmanners.com; }
host pi-robot-1 { hardware ethernet dc:a6:32:11:ae:84; fixed-address pi-robot-1.edsonmanners.com; }
host pi-robot-2 { hardware ethernet d8:3a:dd:3c:3f:e2; fixed-address pi-robot-2.edsonmanners.com; }
host pi-robot-3 { hardware ethernet b8:27:eb:c5:f1:81; fixed-address pi-robot-3.edsonmanners.com; }
host pi-robot-4 { hardware ethernet d8:3a:dd:ca:d5:20; fixed-address pi-robot-4.edsonmanners.com; }
host pi-robot-5 { hardware ethernet d8:3a:dd:e8:56:99; fixed-address pi-robot-5.edsonmanners.com; }
# -- Pi Zeros
#########host pi-zero-2 { hardware ethernet e4:5f:01:52:eb:38; fixed-address 192.168.68.122; }
host pi-zero-2w { hardware ethernet e4:5f:01:52:eb:38; fixed-address 192.168.68.130; }
host pi-zero-20 { hardware ethernet 2c:cf:67:b7:f4:af; fixed-address 192.168.68.131; }
#host pi-zero-10 { hardware ethernet e4:5f:01:52:eb:38; fixed-address 192.168.68.132; }

# -- Gateway Access Point
host ap-tpl7-AlexusRoom	{ hardware ethernet b0:19:21:20:f5:e0; fixed-address 192.168.68.1; }
# -- Deco BE 11000 APs
host ap-tpl7-Den	{ hardware ethernet b0:19:21:20:f5:62; fixed-address 192.168.71.221; }
host ap-tpl7-LivingRoom	{ hardware ethernet b0:19:21:20:f5:aa; fixed-address 192.168.71.222; }
# -- Deco M5 APs
host ap-tpl5-Dining	{ hardware ethernet 0c:80:63:cf:43:d0; fixed-address 192.168.71.223; }
host ap-tpl5-GuestBed	{ hardware ethernet 0c:80:63:cf:52:ac; fixed-address 192.168.71.224; }
host ap-tpl5-Kitchen	{ hardware ethernet 0c:80:63:cf:53:88; fixed-address 192.168.71.225; }
host ap-tpl5-MasterBed	{ hardware ethernet 50:c7:bf:a6:25:68; fixed-address 192.168.71.226; }
host ap-tpl5-Office	{ hardware ethernet 0c:80:63:cf:50:70; fixed-address 192.168.71.227; }


