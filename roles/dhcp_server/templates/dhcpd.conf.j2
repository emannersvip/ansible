# dhcpd.conf
#
# Attention: If /etc/ltsp/dhcpd.conf exists, that will be used as
# configuration file instead of this file.
#

option domain-name "edsonmanners.com";
option domain-name-servers 192.168.68.5, 192.168.69.1;

#default-lease-time 600;		# 5 minutes
default-lease-time 604800;		# 1 week
#max-lease-time 7200;
max-lease-time 1209600;			# 2 weeks

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
ddns-update-style none;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

omapi-port 7911;
omapi-key omapi_key;

key omapi_key {
  algorithm hmac-md5;
  secret dc21efc48b2dc087dc3ebfa48ec720cc;
}

# DHCP Failover Config
# https://kb.isc.org/docs/aa-00502

# https://stackoverflow.com/questions/40086613/ansible-jinja2-string-comparison
# You **CANNOT** use squiggly braces inside of a Jinja2 expression!!!!!!!!!
# {% if 'infra01' == foreman['foreman_hostname'] %}
# {% if 'infra01' == ansible_facts['hostname'] %}
{% if 'infra01' == hostvars[host]['ansible_facts']['hostname'] %}
failover peer "failover-partner" {
  primary;
  address infra01.edsonmanners.com;
  peer address pi-compute.edsonmanners.com;
  max-response-delay 60;
  max-unacked-updates 10;
  mclt 3600;
  split 128;
  load balance max seconds 3;
}
# {% elif 'pi-compute' == foreman['foreman_hostname'] %}
# {% elif 'pi-compute' == ansible_facts['hostname'] %}
{% elif 'pi-compute' == hostvars[host]['ansible_facts']['hostname'] %}
failover peer "failover-partner" {
  secondary;
  address pi-compute.edsonmanners.com;
  peer address infra01.edsonmanners.com;
  max-response-delay 60;
  max-unacked-updates 10;
  load balance max seconds 3;
}
{% endif %}

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
#log-facility local7;

subnet 192.168.68.0 netmask 255.255.252.0 {
  option domain-name-servers 192.168.68.5, 192.168.69.1;
  option routers 192.168.68.1;
  pool {
    failover peer "failover-partner";
    range 192.168.70.100 192.168.70.160;
  }
}

# This is a very basic subnet declaration.

# Fixed IP addresses can also be specified for hosts.   These addresses
# should not also be listed as being available for dynamic assignment.
# Hosts for which fixed IP addresses have been specified can boot using
# BOOTP or DHCP.   Hosts for which no fixed address is specified can only
# be booted with DHCP, unless there is an address range on the subnet
# to which a BOOTP client is connected which has the dynamic-bootp flag
# set.

#host infra  { hardware ethernet --:--:--:--:--:--:--; fixed-address 192.168.68.4; }
host infra01    { hardware ethernet a4:1f:72:93:ef:4c; fixed-address 192.168.68.5; }
host katello    { hardware ethernet 08:00:27:6d:ad:7e; fixed-address 192.168.68.6; }
host gamingrig  { hardware ethernet 14:dd:a9:25:84:96; fixed-address 192.168.68.20; }
# -- Pi Compute Space [32-48]
host pi-compute4-a { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.1; }
#host pi-compute4-b { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.2; }
#host pi-compute4-c { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.3; }
#host pi-compute4-d { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.4; }
# -- Pi Compute 5
#host pi-compute5-a { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.5; }
#host pi-compute5-b { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.6; }
#host pi-compute5-c { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.7; }
#host pi-compute5-d { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.8; }
# --
# -- Turing Pi
host tp-bmc { hardware ethernet c4:ff:84:10:04:3f; fixed-address 192.168.69.30; }
host tp-compute-1 { hardware ethernet 2c:cf:67:30:fc:94; fixed-address 192.168.69.31; }
#host tp-compute-2 { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.32; }
#host tp-compute-3 { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.33; }
#host tp-compute-4 { hardware ethernet dc:a6:32:fe:e6:79; fixed-address 192.168.69.34; }
# --
host pi-keyboard-400 { hardware ethernet dc:a6:32:ea:d8:45; fixed-address 192.168.69.60; }
#host pi-keyboard-400-wifi { hardware ethernet dc:a6:32:ea:d8:46; fixed-address 192.168.69.61; }
# --
host pi-keyboard-500-wired { hardware ethernet 2c:cf:67:bd:44:ef; fixed-address 192.168.70.90; }
host pi-keyboard-500-wifi { hardware ethernet 2c:cf:67:bd:44:f0; fixed-address 192.168.70.92; }
host pi-robot-0 { hardware ethernet b8:27:eb:b0:ba:d9; fixed-address 192.168.69.100; }
host pi-robot-1 { hardware ethernet dc:a6:32:11:ae:84; fixed-address 192.168.69.101; }
host pi-robot-2 { hardware ethernet d8:3a:dd:3c:3f:e1; fixed-address 192.168.69.102; }
host pi-robot-3 { hardware ethernet b8:27:eb:c5:f1:81; fixed-address 192.168.69.103; }
host pi-robot-4 { hardware ethernet d8:3a:dd:ca:d5:1f; fixed-address 192.168.69.104; }
host pi-robot-5 { hardware ethernet d8:3a:dd:e8:56:98; fixed-address 192.168.69.105; }
# -- Pi Zeros
host pi-zero-2w { hardware ethernet e4:5f:01:52:eb:38; fixed-address 192.168.69.140; }
host pi-zero-20 { hardware ethernet 2c:cf:67:b7:f4:af; fixed-address 192.168.69.150; }
host pi-zero-w { hardware ethernet b8:27:eb:ee:a6:3b; fixed-address 192.168.69.160; }
# --
host rocky10 { hardware ethernet 08:00:27:b2:cc:7c; fixed-address 192.168.70.50; }

# Home Automation/IOT/Network 192.168.71.0/24
# GSound [60-75]
host gsound_living_room { hardware ethernet f8:17:2d:e8:b5:d4; fixed-address 192.168.71.60; }
host gsound_aquarium    { hardware ethernet f8:17:2d:e2:06:7e; fixed-address 192.168.71.61; }
# Afero/Hubspace [76-100]

host afero_pool_patio_l { hardware ethernet 08:a6:f7:7b:61:68; fixed-address 192.168.71.76; }
host afero_pool_patio_r { hardware ethernet 34:5f:45:d5:1a:d8; fixed-address 192.168.71.77; }
host afero_pool_house_a { hardware ethernet 34:5f:45:d0:68:ac; fixed-address 192.168.71.78; }
host afero_pool_house_b { hardware ethernet 34:5f:45:d0:68:f8; fixed-address 192.168.71.79; }
host afero_pool_house_c { hardware ethernet 34:5f:45:d0:65:e0; fixed-address 192.168.71.80; }
host afero_pool_patio_a { hardware ethernet 34:5f:45:d2:b1:b0; fixed-address 192.168.71.81; }
host afero_pool_patio_b { hardware ethernet 1c:69:20:65:59:80; fixed-address 192.168.71.82; }
host afero_pool_patio_c { hardware ethernet 34:5f:45:d4:56:94; fixed-address 192.168.71.83; }
#
host hubspace_bathfan_master { hardware ethernet 1c:69:20:53:c7:d4; fixed-address 192.168.71.97; }
host hubspace_bathswitch_master { hardware ethernet 94:54:c5:0d:b7:80; fixed-address 192.168.71.98; }
host hubspace_transformer_f { hardware ethernet c8:2e:18:98:5f:90; fixed-address 192.168.71.99; }
#host hubspace_transformer_b { hardware ethernet c8:2e:18:98:5f:91; fixed-address 192.168.71.100; }

# -- Main Access Point
host ap-tpl7-Den      	{ hardware ethernet b0:19:21:20:f5:e0; fixed-address 192.168.71.220; }
# -- Deco BE 11000 APs
host ap-tpl7-MoOffice  	{ hardware ethernet b0:19:21:20:f5:62; fixed-address 192.168.71.221; }
host ap-tpl7-LivingRoom	{ hardware ethernet b0:19:21:20:f5:aa; fixed-address 192.168.71.222; }
# -- Deco M5 APs
host ap-tpl5-Dining	    { hardware ethernet 0c:80:63:cf:43:d0; fixed-address 192.168.71.223; }
host ap-tpl5-GuestBed	  { hardware ethernet 0c:80:63:cf:52:ac; fixed-address 192.168.71.224; }
host ap-tpl5-Kitchen	  { hardware ethernet 0c:80:63:cf:53:88; fixed-address 192.168.71.225; }
host ap-tpl5-MasterBed	{ hardware ethernet 50:c7:bf:a6:25:68; fixed-address 192.168.71.226; }
host ap-tpl5-Office	    { hardware ethernet 0c:80:63:cf:50:70; fixed-address 192.168.71.227; }


